using System;
class List_
{
    Node head;
    class Node
    {
        public int data;
        public Node next;
        public Node(int d)
        {
            data = d;
            next = null;
        }
    }

    void remove_duplicates()
    {
        Node ptr1 = null,
             ptr2 = null, dup = null;
        ptr1 = head;

        while (ptr1 != null &&
               ptr1.next != null)
        {
            ptr2 = ptr1;

          
            while (ptr2.next != null)
            {
                if (ptr1.data == ptr2.next.data)
                {
                    dup = ptr2.next;
                    ptr2.next = ptr2.next.next;
                }
                else
                {
                    ptr2 = ptr2.next;
                }
            }
            ptr1 = ptr1.next;
        }
    }

    void printList(Node node)
    {
        while (node != null)
        {
            Console.Write(node.data + " ");
            node = node.next;
        }
    }

    public static void Main(String[] args)
    {
        List_ list = new List_();
        list.head = new Node(10);
        list.head.next = new Node(140);
        list.head.next.next = new Node(30);
        list.head.next.next.next = new Node(20);
        list.head.next.next.next.next = new Node(30);
        list.head.next.next.next.next.next = new Node(140);
        list.head.next.next.next.next.next.next
            = new Node(10);

        Console.WriteLine(
                "Linked List before removing duplicates : ");
        list.printList(list.head);

        list.remove_duplicates();
        Console.WriteLine("");
        Console.WriteLine(
                "Linked List after removing duplicates : ");
        list.printList(list.head);



        Console.ReadKey();
}}
