using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp3
{
    internal class Program
    {
        public class BinNode<T>
        {
            private BinNode<T> left;
            private T value;
            private BinNode<T> right;


            public BinNode(T value)
            {
                this.left = null;
                this.value = value;
                this.right = null;
            }
            public BinNode(BinNode<T> left, T value, BinNode<T> right)
            {
                this.left = left;
                this.value = value;
                this.right = right;
            }
            public T GetValue()
            { return this.value; }
            public BinNode<T> GetLeft()
            { return this.left; }
            public BinNode<T> GetRight()
            { return this.right; }
            public void Setvalue(T value)
            {
                this.value = value;
            }
            public void SetLeft(BinNode<T> left)
            {
                this.left = left;
            }
            public void SetRight(BinNode<T> right)
            {
                this.right = right;
            }
            public bool HasLeft()
            {
                return this.left != null;
            }
            public bool HasRight()
            {
                return this.right != null;
            }
            public override string ToString()
            {
                return this.value.ToString();
            }
        }




        public static int returnOdd(BinNode<int> head, int num)
        {
            if (head == null)
            {
                return 0;
            }

            //check if the returned is the right one, and if it is, make it the right one and return it.
            if (num % 2 == 1)
            {
                return num;
            }
            if (head.GetValue() % 2 == 1)
            {
                return head.GetValue();
            }

            return (returnOdd(head.GetLeft(), 0) + returnOdd(head.GetRight(), 0));



        }
        public static int checkIfOdd(BinNode<int> head)
        {
            int result = returnOdd(head, 0);
            return result;

        }




        static void Main(string[] args)
        {
            BinNode<int> six2 = new BinNode<int>(6);
            BinNode<int> six1 = new BinNode<int>(7);
            BinNode<int> eight = new BinNode<int>(six2 , 8 , null);
            BinNode<int> two = new BinNode<int>(six1 , 2 , null);
            BinNode<int> four = new BinNode<int>(eight , 4 , two);

            Console.WriteLine(checkIfOdd(four));

            Console.ReadKey();

        }
    }
}



